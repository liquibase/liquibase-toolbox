image: java:8

build-job:
  stage: build
  script:
    - echo "Liquibase latest version:" 
    - curl -H "Accept:application/vnd.github.v3+json" https://api.github.com/repos/liquibase/liquibase/releases/latest | grep -o 'v.*' | grep -v '\"\,' | grep 'core.*jar' | sed s/'v'//g | sed s/'\/.*'//g
    - $DOWNLOAD_LB
    - $UNZIP_LB
    - echo "Hello, $GITLAB_USER_LOGIN!"
    - which java
    - ./liquibase/liquibase --help
    - ./liquibase/liquibase --changeLogFile=./H2_project/myChangeLog.xml --url=jdbc:h2:file:./H2_project/liquibase_test --logLevel=info status --verbose

test-job1:
  stage: test
  script:
    - $DOWNLOAD_LB
    - $UNZIP_LB
    - echo "This job tests liquibase update in test environment"
    - ./liquibase/liquibase --changeLogFile=./H2_project/myChangeLog.xml --url=jdbc:h2:file:./H2_project/liquibase_test --logLevel=info update

test-job2:
  stage: test
  script:
    - $DOWNLOAD_LB
    - $UNZIP_LB
    - echo "This job tests liquibase rollback in test environment"
    - ./liquibase/liquibase --changeLogFile=./H2_project/myChangeLog.xml --url=jdbc:h2:file:./H2_project/liquibase_test --logLevel=info update
    - ./liquibase/liquibase --changeLogFile=./H2_project/myChangeLog.xml --url=jdbc:h2:file:./H2_project/liquibase_test --logLevel=info rollbackCount 1

deploy-prod:
  stage: deploy
  script:
    - $DOWNLOAD_LB
    - $UNZIP_LB
    - echo "This job deploys Liquibase in a production environment from the $CI_COMMIT_BRANCH branch."
    - ./liquibase/liquibase --changeLogFile=./H2_project/myChangeLog.xml --url=jdbc:h2:file:./H2_project/liquibase_prod --logLevel=info update

variables:
  VERSION: "4.2.2"
  DOWNLOAD_LB: "curl -L https://github.com/liquibase/liquibase/releases/download/v${VERSION}/liquibase-${VERSION}.zip --output liquibase-${VERSION}.zip"
  UNZIP_LB: "unzip -o -d liquibase liquibase-${VERSION}.zip"
