###
### This sample pipeline is intended as a starting point for integration between Liquibase Pro and GitHub pipelines
### Review and update prior to use
###
### Liquibase sales: https://www.liquibase.com/contact
### Liquibase support: https://support.liquibase.com/knowledge
### 

###
### Prior to running the following files must exist in repository:
###
### 1. liquibase.flowfile.yaml
###    Liquibase flow file
###    https://docs.liquibase.com/commands/flow/flow.html
###
### 2. liquibase.checks-settings.conf
###    Liquibase quality checks configuration file
###    https://docs.liquibase.com/commands/quality-checks/home.html
###
### 3. Snapshot_DEV.json
###    Initial snapshot file for target database (will be updated as part of the Liquibase flow)
###    Run: liquibase snapshot --outputfile="Snapshot_DEV.json" --snapshotformat=json
###    https://docs.liquibase.com/commands/inspection/snapshot.html
###
### 4. changelog.main.xml
###    Liquibase changelog file
###    https://docs.liquibase.com/concepts/changelogs/home.html
###

###
### GitHub Actions documentation: https://docs.github.com/en/actions
###

name: Liquibase

###
### Pipelines can be triggered manually or via events
###
on:
  workflow_dispatch:

###
### Set Liquibase environment variables
###
env:
    LB_ENVIRONMENT: DEV
    LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog.main.xml
    LIQUIBASE_COMMAND_TAG: ${{ github.run_number }}
###
### These values should be pulled from GitHub secrets
### Secrets should include LIQUIBASE_COMMAND_URL, LIQUIBASE_COMMAND_USERNAME, LIQUIBASE_COMMAND_PASSWORD, LIQUIBASE_PRO_LICENSE_KEY
###
    LIQUIBASE_COMMAND_URL: ${{ secrets.LIQUIBASE_DEV_URL }}
    LIQUIBASE_COMMAND_USERNAME: ${{ secrets.LIQUIBASE_DEV_USER }}
    LIQUIBASE_COMMAND_PASSWORD: ${{ secrets.LIQUIBASE_DEV_PASSWORD }}
    LIQUIBASE_PRO_LICENSE_KEY: ${{ secrets.LIQUIBASE_PROKEY }}

jobs:
  liquibase:
###
### Update agent location
###
    runs-on: ubuntu-latest

###
### Checkout repository
###
    steps:
    - name: Checking out repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.LIQUIBASE_GITHUB_TOKEN }}
###
### Run the Liquibase flowfile
### Liquibase should be installed where your agents run or invoked via Docker
###
    - name: Running Liquibase
      run: docker run --env LIQUIBASE_COMMAND_USERNAME --env LIQUIBASE_COMMAND_PASSWORD --env LIQUIBASE_COMMAND_URL --env LIQUIBASE_PRO_LICENSE_KEY --env LIQUIBASE_COMMAND_CHANGELOG_FILE --env LIQUIBASE_COMMAND_TAG --env LB_ENVIRONMENT --rm -v ${{ github.workspace }}:/liquibase/changelog liquibase/liquibase:latest flow --flow-file=liquibase.flowfile.yaml
###
### Update respository
###
    - name: Updating repository
      run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
        git add .
        git commit -m "Update snapshots."
        git push --force