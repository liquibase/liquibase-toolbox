###
### This sample pipeline is intended as a starting point for integration between Liquibase Pro and CircleCI pipelines
### Review and update prior to use
###
### Liquibase sales: https://www.liquibase.com/contact
### Liquibase support: https://support.liquibase.com/knowledge
### 

###
### Prior to running the following files must exist in repository:
###
### 1. liquibase.flowfile.yaml
###    Liquibase flow file
###    https://docs.liquibase.com/commands/flow/flow.html
###
### 2. liquibase.checks-settings.conf
###    Liquibase quality checks configuration file
###    https://docs.liquibase.com/commands/quality-checks/home.html
###
### 3. Snapshot_DEV.json
###    Initial snapshot file for target database (will be updated as part of the Liquibase flow)
###    Run: liquibase snapshot --outputfile="Snapshot_DEV.json" --snapshotformat=json
###    https://docs.liquibase.com/commands/inspection/snapshot.html
###
### 4. changelog.main.xml
###    Liquibase changelog file
###    https://docs.liquibase.com/concepts/changelogs/home.html
###

###
### CircleCI documentation: https://circleci.com/docs/
###

version: 2.1
 
jobs:
  liquibase-job:
    machine:
      image: ubuntu-2204:current
    
    environment:
###
### Set Liquibase environment variables
###
      LB_ENVIRONMENT: DEV
      LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog.main.xml

    steps:
      - checkout
###
### These should be pulled from environment variables or vault
### Secrets should include LIQUIBASE_COMMAND_URL, LIQUIBASE_COMMAND_USERNAME, LIQUIBASE_COMMAND_PASSWORD, LIQUIBASE_PRO_LICENSE_KEY
###
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export LIQUIBASE_COMMAND_TAG="$CIRCLE_BUILD_NUM"' >> "$BASH_ENV"
            echo 'export LIQUIBASE_COMMAND_URL="$LB_DEV_URL"' >> "$BASH_ENV"
            echo 'export LIQUIBASE_COMMAND_USERNAME="$LB_DEV_USER"' >> "$BASH_ENV"
            echo 'export LIQUIBASE_COMMAND_PASSWORD="$LB_DEV_PASSWORD"' >> "$BASH_ENV"
            echo 'export LIQUIBASE_PRO_LICENSE_KEY="$LB_PROKEY"' >> "$BASH_ENV"
###
### Run the Liquibase flowfile
### Liquibase should be installed where your agents run or invoked via Docker
###
      - run:
          name: Running Liquibase
          command: docker run --env LIQUIBASE_COMMAND_USERNAME --env LIQUIBASE_COMMAND_PASSWORD --env LIQUIBASE_COMMAND_URL --env LIQUIBASE_PRO_LICENSE_KEY --env LIQUIBASE_COMMAND_CHANGELOG_FILE --env LIQUIBASE_COMMAND_TAG --env LB_ENVIRONMENT --rm -v $(pwd):/liquibase/changelog liquibase/liquibase:latest flow --flow-file=liquibase.flowfile.yaml
###
### Update respository
### User key must be created to update the Git repository
###
      - run:
          name: Updating repository
          command: |
            git config --global user.name circleci-pipeline
            git config --global user.email circleci-pipeline@circleci.com
            git add .
            git commit -m "[skip ci] Update snapshots."
            git push --force

workflows:
  liquibase-workflow:
    jobs:
      - liquibase-job